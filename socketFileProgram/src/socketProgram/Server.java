package socketProgram;

import java.net.*;

import java.nio.file.Paths;
import java.util.ArrayList;
import java.nio.file.Files;


import java.io.*;



public class Server {
	private ServerSocket serverSocket;

	
	public void start(int port) throws IOException {
		serverSocket = new ServerSocket(port);
		System.out.println("Server started...");
		while (true) {
			new ClientHandler(serverSocket.accept()).start();
		}
		
	}
	
	public void stop() throws IOException {
		serverSocket.close();
	}
	
	private static class ClientHandler extends Thread{
		private Socket clientSocket;
		private PrintWriter out;
		private BufferedReader in;
	
		
		
		
		public ClientHandler(Socket socket) {
			System.out.println("Client " + socket.toString() + " connected.");
			this.clientSocket = socket;
			
		}
		
		private ArrayList<String> getFilePath(String header) {
			ArrayList<String> items = new ArrayList<String>();
			
			if(header != null) {
				
				String[] lineContent = header.split(" ");
				items.add(lineContent[0]);
				String fullPath = lineContent[1];
				
				
				String[] path = fullPath.split("/");
				String shortPath ="";
				for(int i=0; i< path.length-1; i++) {
					if(i !=0 )
						shortPath += "/"+ path[i];
					
				}
				items.add(shortPath);
				
				String value = path[path.length-1];
				items.add(value);
			}
			return items;
		}
		
		
		
		public void run()  {
            try {
            	
				out = new PrintWriter(clientSocket.getOutputStream(), true);
				in = new BufferedReader(
			              new InputStreamReader(clientSocket.getInputStream())
			         );
			     
	            String inputLine;
	            ArrayList<String> requestPath;
	            ArrayList<String> packet = new ArrayList<String>();
	            
	            
	            while ((inputLine = in.readLine()) != null && inputLine.length() != 0) {	            	
	            	packet.add(inputLine);
	                System.out.println(this.clientSocket.getPort() + ": " + inputLine );
	                	   
	            }
	          	            	      
	            if(!packet.isEmpty()) {
	            	requestPath = getFilePath(packet.get(0));
	            	
	            	System.out.println("Method:" + requestPath.get(0)+  " FilePath: " + requestPath.get(1) + " FileName:" + requestPath.get(2));
	         	            	
	            	  //Saving everything in the storage folder within the directory
		    		  String dir = System.getProperty("user.dir");		    				    		  
		    		  dir += "/storage";
		    		  		    		  
		    		  Files.createDirectories(Paths.get(dir + requestPath.get(1)));
		    		  File file = new File(dir + requestPath.get(1) + "/" + requestPath.get(2));
		    		  boolean value = file.createNewFile();
		    		 
		    		  if(value) { //else file exists
		    			  //Created file now Write to file a generic phrase of some sort 
		    			  System.out.println("File Created!");
		    			 
		    			  FileWriter output = new FileWriter(file);
		    			  output.write("New autogenerated file");
		    			  output.close();
		    			  
		    		  }
		    		  //Read the file and send it as a response.
		    		  // Creates a FileInputStream

		    		  
		    		  FileReader fr = new FileReader(file);
		    		  BufferedReader br = new BufferedReader(fr);
		    		  
		    		  String line;
		    		  while((line = br.readLine()) != null) {
		    			  System.out.println(line);
		    			  out.println(line); 
		    		  }
		    		  br.close();
	            		 
	            			            			           	
	            }     	
	            	
	            
	            
	        
//	            System.out.println(path);
	            in.close();
	            out.close();
	            clientSocket.close();
	            
	            
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
           
    }
	}
	
}
